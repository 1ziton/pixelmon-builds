/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
// #region all modules
import { G2BarModule } from '@pixelmon/chart/bar';
import { G2CardModule } from '@pixelmon/chart/card';
import { G2CustomModule } from '@pixelmon/chart/custom';
import { G2GaugeModule } from '@pixelmon/chart/gauge';
import { G2MiniAreaModule } from '@pixelmon/chart/mini-area';
import { G2MiniBarModule } from '@pixelmon/chart/mini-bar';
import { G2MiniProgressModule } from '@pixelmon/chart/mini-progress';
import { NumberInfoModule } from '@pixelmon/chart/number-info';
import { G2PieModule } from '@pixelmon/chart/pie';
import { G2RadarModule } from '@pixelmon/chart/radar';
import { G2SingleBarModule } from '@pixelmon/chart/single-bar';
import { G2TagCloudModule } from '@pixelmon/chart/tag-cloud';
import { G2TimelineModule } from '@pixelmon/chart/timeline';
import { TrendModule } from '@pixelmon/chart/trend';
import { G2WaterWaveModule } from '@pixelmon/chart/water-wave';
/** @type {?} */
const MODULES = [
    G2BarModule,
    G2CardModule,
    G2CustomModule,
    G2GaugeModule,
    G2MiniAreaModule,
    G2MiniBarModule,
    G2MiniProgressModule,
    G2PieModule,
    G2RadarModule,
    G2TagCloudModule,
    G2TimelineModule,
    G2WaterWaveModule,
    G2SingleBarModule,
    NumberInfoModule,
    TrendModule,
];
// #endregion
export class PixelmonChartModule {
}
PixelmonChartModule.decorators = [
    { type: NgModule, args: [{ exports: MODULES },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhcnQubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBpeGVsbW9uL2NoYXJ0LyIsInNvdXJjZXMiOlsiY2hhcnQubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDOztBQUl6QyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDbEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDdEQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDN0QsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQzNELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ3JFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQy9ELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNsRCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDdEQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDL0QsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDN0QsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDNUQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3BELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDOztNQUV6RCxPQUFPLEdBQUc7SUFDZCxXQUFXO0lBQ1gsWUFBWTtJQUNaLGNBQWM7SUFDZCxhQUFhO0lBQ2IsZ0JBQWdCO0lBQ2hCLGVBQWU7SUFDZixvQkFBb0I7SUFDcEIsV0FBVztJQUNYLGFBQWE7SUFDYixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLGlCQUFpQjtJQUNqQixpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLFdBQVc7Q0FDWjs7QUFLRCxNQUFNLE9BQU8sbUJBQW1COzs7WUFEL0IsUUFBUSxTQUFDLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8vICNyZWdpb24gYWxsIG1vZHVsZXNcblxuaW1wb3J0IHsgRzJCYXJNb2R1bGUgfSBmcm9tICdAcGl4ZWxtb24vY2hhcnQvYmFyJztcbmltcG9ydCB7IEcyQ2FyZE1vZHVsZSB9IGZyb20gJ0BwaXhlbG1vbi9jaGFydC9jYXJkJztcbmltcG9ydCB7IEcyQ3VzdG9tTW9kdWxlIH0gZnJvbSAnQHBpeGVsbW9uL2NoYXJ0L2N1c3RvbSc7XG5pbXBvcnQgeyBHMkdhdWdlTW9kdWxlIH0gZnJvbSAnQHBpeGVsbW9uL2NoYXJ0L2dhdWdlJztcbmltcG9ydCB7IEcyTWluaUFyZWFNb2R1bGUgfSBmcm9tICdAcGl4ZWxtb24vY2hhcnQvbWluaS1hcmVhJztcbmltcG9ydCB7IEcyTWluaUJhck1vZHVsZSB9IGZyb20gJ0BwaXhlbG1vbi9jaGFydC9taW5pLWJhcic7XG5pbXBvcnQgeyBHMk1pbmlQcm9ncmVzc01vZHVsZSB9IGZyb20gJ0BwaXhlbG1vbi9jaGFydC9taW5pLXByb2dyZXNzJztcbmltcG9ydCB7IE51bWJlckluZm9Nb2R1bGUgfSBmcm9tICdAcGl4ZWxtb24vY2hhcnQvbnVtYmVyLWluZm8nO1xuaW1wb3J0IHsgRzJQaWVNb2R1bGUgfSBmcm9tICdAcGl4ZWxtb24vY2hhcnQvcGllJztcbmltcG9ydCB7IEcyUmFkYXJNb2R1bGUgfSBmcm9tICdAcGl4ZWxtb24vY2hhcnQvcmFkYXInO1xuaW1wb3J0IHsgRzJTaW5nbGVCYXJNb2R1bGUgfSBmcm9tICdAcGl4ZWxtb24vY2hhcnQvc2luZ2xlLWJhcic7XG5pbXBvcnQgeyBHMlRhZ0Nsb3VkTW9kdWxlIH0gZnJvbSAnQHBpeGVsbW9uL2NoYXJ0L3RhZy1jbG91ZCc7XG5pbXBvcnQgeyBHMlRpbWVsaW5lTW9kdWxlIH0gZnJvbSAnQHBpeGVsbW9uL2NoYXJ0L3RpbWVsaW5lJztcbmltcG9ydCB7IFRyZW5kTW9kdWxlIH0gZnJvbSAnQHBpeGVsbW9uL2NoYXJ0L3RyZW5kJztcbmltcG9ydCB7IEcyV2F0ZXJXYXZlTW9kdWxlIH0gZnJvbSAnQHBpeGVsbW9uL2NoYXJ0L3dhdGVyLXdhdmUnO1xuXG5jb25zdCBNT0RVTEVTID0gW1xuICBHMkJhck1vZHVsZSxcbiAgRzJDYXJkTW9kdWxlLFxuICBHMkN1c3RvbU1vZHVsZSxcbiAgRzJHYXVnZU1vZHVsZSxcbiAgRzJNaW5pQXJlYU1vZHVsZSxcbiAgRzJNaW5pQmFyTW9kdWxlLFxuICBHMk1pbmlQcm9ncmVzc01vZHVsZSxcbiAgRzJQaWVNb2R1bGUsXG4gIEcyUmFkYXJNb2R1bGUsXG4gIEcyVGFnQ2xvdWRNb2R1bGUsXG4gIEcyVGltZWxpbmVNb2R1bGUsXG4gIEcyV2F0ZXJXYXZlTW9kdWxlLFxuICBHMlNpbmdsZUJhck1vZHVsZSxcbiAgTnVtYmVySW5mb01vZHVsZSxcbiAgVHJlbmRNb2R1bGUsXG5dO1xuXG4vLyAjZW5kcmVnaW9uXG5cbkBOZ01vZHVsZSh7IGV4cG9ydHM6IE1PRFVMRVMgfSlcbmV4cG9ydCBjbGFzcyBQaXhlbG1vbkNoYXJ0TW9kdWxlIHt9XG4iXX0=